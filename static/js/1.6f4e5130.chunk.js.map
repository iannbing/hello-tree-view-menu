{"version":3,"sources":["components/TreeViewMenu/ListGroupItem.js","components/TreeViewMenu/index.js","DemoPage.js"],"names":["ToggleIcon","styled","position","left","width","height","ListGroupItemWithPadding","ListGroupItem_default","a","_ref","_ref$level","level","paddingLeft","concat","ListGroupItem","_ref2","_ref2$hasSubItems","hasSubItems","_ref2$isOpen","isOpen","_ref2$level","children","props","Object","objectWithoutProperties","react_default","createElement","Fragment","assign","TreeViewMenu","data","this","console","log","navigate","ListGroup_default","TreeViewMenu_ListGroupItem","onClick","active","Component","defaultProps","path","document","location","href","process","DemoPage","state","components_TreeViewMenu","get_default","withRouter"],"mappings":"2OAOMA,EAAaC,YAAO,MAAPA,CAAc,CAC/BC,SAAU,WACVC,KAAM,GACNC,MAAO,GACPC,OAAQ,KAGJC,EAA2BL,YAAOM,EAAAC,EAAPP,CAC/B,SAAAQ,GAAA,IAAAC,EAAAD,EAAGE,MAAH,MAAoB,CAClBC,YAAW,GAAAC,OAZS,KACJ,QAUlB,IAAAH,EAAW,EAAXA,GACa,UAmBAI,EAfO,SAAAC,GAAA,IAAAC,EAAAD,EACpBE,mBADoB,IAAAD,KAAAE,EAAAH,EAEpBI,cAFoB,IAAAD,KAAAE,EAAAL,EAGpBJ,aAHoB,IAAAS,EAGZ,EAHYA,EAIpBC,EAJoBN,EAIpBM,SACGC,EALiBC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,oDAOpBU,EAAAjB,EAAAkB,cAAAD,EAAAjB,EAAAmB,SAAA,KACEF,EAAAjB,EAAAkB,cAACpB,EAADiB,OAAAK,OAAA,CAA0BjB,MAAOM,EAAcN,EAAQ,GAAOW,GAC3DL,GAAeQ,EAAAjB,EAAAkB,cAAC1B,EAAD,KAAamB,EAAS,IAAM,KAC3CE,KCrBDQ,8LAOgB,IACVC,EAASC,KAAKT,MAAdQ,KAERE,QAAQC,IAAIH,oCAGL,IACCI,EAAaH,KAAKT,MAAlBY,SAER,OACET,EAAAjB,EAAAkB,cAAAS,EAAA3B,EAAA,KACEiB,EAAAjB,EAAAkB,cAACU,EAAD,CAAeC,QAASH,EAAS,iBAAkBI,QAAM,GAAzD,iBAGAb,EAAAjB,EAAAkB,cAACU,EAAD,CAAenB,aAAW,EAACN,MAAO,EAAGQ,QAAM,GAA3C,4BArBmBoB,aAArBV,EACGW,aAAe,CACpBV,KAAM,KACNW,KAAM,GACNP,SARoB,SAAAO,GAAI,OAAI,WAC9BC,SAASC,SAASC,KAAlB,GAAA/B,OAA4BgC,yBAA5BhC,OAA6D4B,MAgChDZ,gBC/BTiB,6MAMJC,MAAQ,CAAEN,KAAM,4EAEP,IACCA,EAASV,KAAKgB,MAAdN,KACR,OAAOhB,EAAAjB,EAAAkB,cAACsB,EAAD,CAAclB,KAAMA,EAAMW,KAAMA,uDATTnB,GAE9B,MAAO,CAAEmB,KADIQ,IAAI3B,EAAO,qBAFLiB,aAcRW,sBAAWJ","file":"static/js/1.6f4e5130.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'react-emotion';\nimport { ListGroupItem as DefaultListGroupItem } from 'reactstrap';\n\nconst DEFAULT_PADDING = 1.25;\nconst LEVEL_SPACE = 1;\n\nconst ToggleIcon = styled('div')({\n  position: 'absolute',\n  left: 20,\n  width: 10,\n  height: 10\n});\n\nconst ListGroupItemWithPadding = styled(DefaultListGroupItem)(\n  ({ level = 0 }) => ({\n    paddingLeft: `${DEFAULT_PADDING + level * LEVEL_SPACE}rem`\n  })\n);\n\nconst ListGroupItem = ({\n  hasSubItems = false,\n  isOpen = false,\n  level = 0,\n  children,\n  ...props\n}) => (\n  <>\n    <ListGroupItemWithPadding level={hasSubItems ? level : 0} {...props}>\n      {hasSubItems && <ToggleIcon>{isOpen ? '-' : '+'}</ToggleIcon>}\n      {children}\n    </ListGroupItemWithPadding>\n  </>\n);\n\nexport default ListGroupItem;\n","import React, { Component } from 'react';\nimport { ListGroup } from 'reactstrap';\n\nimport ListGroupItem from './ListGroupItem';\n\nconst defaultNavigate = path => () => {\n  document.location.href = `${process.env.REACT_APP_BASE_URL}${path}`;\n};\n\nclass TreeViewMenu extends Component {\n  static defaultProps = {\n    data: null,\n    path: '',\n    navigate: defaultNavigate\n  };\n\n  componentDidMount() {\n    const { data } = this.props;\n\n    console.log(data);\n  }\n\n  render() {\n    const { navigate } = this.props;\n\n    return (\n      <ListGroup>\n        <ListGroupItem onClick={navigate('/releasenotes')} active>\n          Release Notes\n        </ListGroupItem>\n        <ListGroupItem hasSubItems level={1} isOpen>\n          Developer Portal\n        </ListGroupItem>\n      </ListGroup>\n    );\n  }\n}\n\nexport default TreeViewMenu;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { get } from 'lodash';\n\nimport TreeViewMenu from './components/TreeViewMenu';\nimport data from './data/spaces.json';\n\nclass DemoPage extends Component {\n  static getDerivedStateFromProps(props) {\n    const path = get(props, 'match.url');\n    return { path };\n  }\n\n  state = { path: '' };\n\n  render() {\n    const { path } = this.state;\n    return <TreeViewMenu data={data} path={path} />;\n  }\n}\n\nexport default withRouter(DemoPage);\n"],"sourceRoot":""}