{"version":3,"sources":["components/TreeViewMenu/ListGroupItem.js","components/TreeViewMenu/walk.js","components/TreeViewMenu/index.js","DemoPage/transpose.js","DemoPage/index.js"],"names":["ToggleIcon","styled","_ref","_ref$level","level","position","left","concat","width","height","ListGroupItemWithPadding","ListGroupItem_default","a","_ref2","_ref2$level","paddingLeft","DEFAULT_PADDING","cursor","ListGroupItem","_ref3","_ref3$hasSubItems","hasSubItems","_ref3$isOpen","isOpen","_ref3$level","children","props","Object","objectWithoutProperties","react_default","createElement","assign","walk","data","_ref$parent","parent","activeKey","openNodes","searchTerm","getOnClickFunction","entries","sort","b","index","reduce","all","slicedToArray","nodeName","node","label","onClick","nodes","key","undefined","isActive","currentNode","filter","x","join","showChildren","includes","onClickFunction","isMatching","toLowerCase","trim","currentItem","TreeViewMenu_ListGroupItem","active","nextLevelItems","toConsumableArray","defaultOnClick","console","warn","realtimeSearch","debounce_default","searchFunction","value","TreeViewMenu","state","onChange","e","target","_this","setState","toggleNode","openNode","loadListItems","_this$props","_this$state","items","this","prevProps","prevState","isEqual_default","_this$props2","search","Fragment","InputGroup_default","InputGroupAddon_default","addonType","Input_default","react","fallback","ListGroup_default","React","Component","defaultProps","transposeSpace","space","navigate","spaceIndex","content","pages","allPages","currentPage","pageIndex","t","u","m","p","path","split","splice","length","newObj","createObjFromKeys","_ref$obj","obj","keys","shift","objectSpread","cleanPath","merge_default","transpose","Array","isArray","allSpaces","currentSpace","currentSpacePages","DemoPage","treeData","processData","history","push","components_TreeViewMenu","get_default","withRouter"],"mappings":"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","file":"static/js/1.cab6b4a2.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'react-emotion';\nimport { ListGroupItem as DefaultListGroupItem } from 'reactstrap';\n\nconst DEFAULT_PADDING = 1.25;\nconst LEVEL_SPACE = 1.25;\nconst ICON_SIZE = 1;\n\nconst ToggleIcon = styled('div')(({ level = 0 }) => ({\n  position: 'absolute',\n  left: `${ICON_SIZE + level * LEVEL_SPACE}rem`,\n  width: `${ICON_SIZE}rem`,\n  height: `${ICON_SIZE}rem`\n}));\n\nconst ListGroupItemWithPadding = styled(DefaultListGroupItem)(\n  ({ level = 0 }) => ({\n    paddingLeft: `${DEFAULT_PADDING + ICON_SIZE + level * LEVEL_SPACE}rem`,\n    cursor: 'pointer'\n  })\n);\n\nconst ListGroupItem = ({\n  hasSubItems = false,\n  isOpen = false,\n  level = 0,\n  children,\n  ...props\n}) => (\n  <ListGroupItemWithPadding level={level} {...props}>\n    {hasSubItems && <ToggleIcon level={level}>{isOpen ? '-' : '+'}</ToggleIcon>}\n    {children}\n  </ListGroupItemWithPadding>\n);\n\nexport default ListGroupItem;\n","import React from 'react';\n\nimport ListGroupItem from './ListGroupItem';\n\nconst walk = ({\n  data,\n  parent = '',\n  level = 0,\n  activeKey,\n  openNodes,\n  searchTerm,\n  getOnClickFunction\n}) =>\n  Object.entries(data)\n    .sort((a, b) => a[1].index - b[1].index)\n    .reduce((all, [nodeName, node]) => {\n      const { label, onClick, nodes, key } = node;\n      const hasSubItems = nodes !== undefined && nodes !== null;\n      if (!key) return all;\n      const isActive = activeKey === key;\n      const currentNode = [parent, nodeName].filter(x => x).join('/');\n      const showChildren = openNodes.includes(currentNode) || searchTerm;\n      const onClickFunction = getOnClickFunction({\n        onClick,\n        node: currentNode\n      });\n      const isMatching =\n        searchTerm &&\n        label.toLowerCase().includes(searchTerm.trim().toLowerCase());\n\n      const currentItem = (\n        <ListGroupItem\n          hasSubItems={hasSubItems}\n          isOpen={showChildren}\n          level={level}\n          onClick={onClickFunction}\n          active={isActive}\n          key={currentNode}\n        >\n          {label}\n        </ListGroupItem>\n      );\n      const nextLevelItems =\n        nodes &&\n        walk({\n          data: nodes,\n          parent: currentNode,\n          level: level + 1,\n          activeKey,\n          openNodes,\n          searchTerm,\n          getOnClickFunction,\n          showChildren\n        });\n\n      return [\n        ...all,\n        (!searchTerm || isMatching) && currentItem,\n        showChildren && nextLevelItems\n      ].filter(x => x);\n    }, []);\n\nexport default walk;\n","import React, { Suspense } from 'react';\nimport { debounce, isEqual } from 'lodash';\nimport { ListGroup, InputGroup, InputGroupAddon, Input } from 'reactstrap';\n\nimport walk from './walk';\n\nconst defaultOnClick = () => console.warn('no behavior defined'); // eslint-disable-line no-console\n\nconst realtimeSearch = debounce(\n  (searchFunction, value) => searchFunction(value),\n  500\n);\n\nclass TreeViewMenu extends React.Component {\n  static defaultProps = {\n    data: null,\n    activeKey: '',\n    search: false\n  };\n\n  state = { openNodes: [], searchTerm: '' };\n\n  componentDidMount() {\n    this.loadListItems();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { data } = this.props;\n    const { openNodes } = this.state;\n    if (isEqual(prevProps.data !== data) || prevState.openNodes !== openNodes) {\n      this.loadListItems();\n    }\n  }\n\n  onChange = e => {\n    const { value } = e.target;\n    realtimeSearch(searchTerm => this.setState({ searchTerm }), value);\n  };\n\n  toggleNode = node => {\n    const { openNodes } = this.state;\n    if (openNodes.includes(node)) {\n      this.setState({\n        openNodes: openNodes.filter(openNode => openNode !== node)\n      });\n    } else {\n      this.setState({ openNodes: [...openNodes, node] });\n    }\n  };\n\n  getOnClickFunction = ({ onClick, node }) => () => {\n    const onClickFn = onClick || defaultOnClick;\n    onClickFn();\n    this.toggleNode(node);\n  };\n\n  loadListItems = () => {\n    const { data, activeKey } = this.props;\n    const { openNodes, searchTerm } = this.state;\n\n    this.setState({\n      items: walk({\n        data,\n        activeKey,\n        openNodes,\n        searchTerm,\n        getOnClickFunction: this.getOnClickFunction\n      })\n    });\n  };\n\n  render() {\n    const { data, search } = this.props;\n    const { items } = this.state;\n\n    return (\n      <>\n        {search && (\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\n            <Input onChange={this.onChange} />\n          </InputGroup>\n        )}\n        {data && (\n          <Suspense fallback={<div>loading...</div>}>\n            <ListGroup>{items}</ListGroup>\n          </Suspense>\n        )}\n      </>\n    );\n  }\n}\n\nexport default TreeViewMenu;\n","import { merge } from 'lodash';\n\nconst createObjFromKeys = ({ obj = {}, keys, value }) => {\n  if (keys.length === 1) {\n    obj[keys[0]] = value;\n  } else {\n    const key = keys.shift();\n    obj[key] = obj[key] || {};\n    obj[key].nodes = {\n      ...obj[key].nodes,\n      ...createObjFromKeys({\n        obj: typeof obj[key].nodes === 'undefined' ? {} : obj[key].nodes,\n        keys,\n        value\n      })\n    };\n  }\n\n  return obj;\n};\n\nconst cleanPath = path =>\n  path\n    .split('/')\n    .filter(x => x)\n    .join('/');\n\nconst transposeSpace = ({ space, navigate, spaceIndex }) => {\n  const { content } = space;\n  return content.pages.reduce((allPages, currentPage, pageIndex) => {\n    const {\n      t, // title\n      // c, // category\n      // i, // identifier\n      u, // url\n      // d, // directory\n      m, // is space\n      p // parent page\n    } = currentPage;\n    const path = u.split('/').filter(x => x);\n\n    // if it has a parent page, insert it to have complete nodes\n    if (p) path.splice(path.length - 1, 0, p);\n\n    const newObj = createObjFromKeys({\n      keys: path,\n      value: {\n        label: t,\n        onClick: () => navigate(u),\n        key: cleanPath(u),\n        index: m ? spaceIndex : pageIndex\n      }\n    });\n    return merge(newObj, allPages);\n  }, {});\n};\n\nconst transpose = ({ data, navigate, index }) => {\n  if (Array.isArray(data))\n    return data.reduce((allSpaces, currentSpace, spaceIndex) => {\n      const currentSpacePages = transposeSpace({\n        space: currentSpace,\n        spaceIndex,\n        navigate\n      });\n      return {\n        ...allSpaces,\n        ...currentSpacePages\n      };\n    }, {});\n  return transposeSpace({\n    space: data,\n    spaceIndex: index,\n    navigate\n  });\n};\n\nexport default transpose;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { get } from 'lodash';\n\nimport TreeViewMenu from '../components/TreeViewMenu';\nimport data from '../data/spaces.json';\nimport transpose from './transpose';\n\nconst cleanPath = path =>\n  path\n    .split('/')\n    .filter(x => x)\n    .join('/');\n\nclass DemoPage extends Component {\n  static getDerivedStateFromProps(props) {\n    const path = get(props, 'location.pathname');\n\n    return { path };\n  }\n\n  state = { path: '', treeData: null };\n\n  componentDidMount() {\n    this.processData();\n  }\n\n  processData = () => {\n    const treeData = transpose({ data, navigate: this.navigate });\n    this.setState({ treeData });\n  };\n\n  navigate = path => {\n    const { history } = this.props;\n    history.push(path);\n  };\n\n  render() {\n    const { path, treeData } = this.state;\n    const activeKey = cleanPath(path);\n    return (\n      <>\n        {treeData && (\n          <TreeViewMenu data={treeData} activeKey={activeKey} search />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(DemoPage);\n"],"sourceRoot":""}