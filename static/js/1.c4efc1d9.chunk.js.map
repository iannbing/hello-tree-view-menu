{"version":3,"sources":["components/TreeViewMenu/ListGroupItem.js","components/TreeViewMenu/status.js","components/TreeViewMenu/walk.js","components/TreeViewMenu/index.js","DemoPage/transpose.js","DemoPage/index.js"],"names":["ToggleIcon","styled","_ref","_ref$level","level","position","left","concat","width","height","ListGroupItemWithPadding","ListGroupItem_default","a","_ref2","_ref2$level","paddingLeft","DEFAULT_PADDING","cursor","ListGroupItem","_ref3","_ref3$hasSubItems","hasSubItems","_ref3$isOpen","isOpen","_ref3$level","children","props","Object","objectWithoutProperties","react_default","createElement","assign","memoryStatus","isInitializing","status","get","key","set","value","walk","data","_ref$parent","parent","activeKey","openNodes","searchTerm","getOnClickFunction","entries","sort","b","index","reduce","all","slicedToArray","nodeName","node","label","onClick","nodes","undefined","isActive","currentNode","filter","x","join","includes","onClickFunction","isMatching","toLowerCase","trim","currentItem","TreeViewMenu_ListGroupItem","active","nextLevelItems","toConsumableArray","defaultOnClick","console","warn","realtimeSearch","debounce_default","searchFunction","TreeViewMenu","state","onChange","e","target","_this","setState","toggleNode","openNode","preload","_this$props","_this$state","getListItems","_this$props2","_this$state2","_this$props3","this","search","Fragment","InputGroup_default","InputGroupAddon_default","addonType","Input_default","ListGroup_default","React","Component","defaultProps","transposeSpace","space","navigate","spaceIndex","content","pages","allPages","currentPage","pageIndex","t","u","m","p","path","split","splice","length","newObj","createObjFromKeys","_ref$obj","obj","keys","shift","objectSpread","cleanPath","merge_default","transpose","Array","isArray","allSpaces","currentSpace","currentSpacePages","DemoPage","treeData","processData","history","push","components_TreeViewMenu","get_default","withRouter"],"mappings":"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","file":"static/js/1.c4efc1d9.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'react-emotion';\nimport { ListGroupItem as DefaultListGroupItem } from 'reactstrap';\n\nconst DEFAULT_PADDING = 1.25;\nconst LEVEL_SPACE = 1.25;\nconst ICON_SIZE = 1;\n\nconst ToggleIcon = styled('div')(({ level = 0 }) => ({\n  position: 'absolute',\n  left: `${ICON_SIZE + level * LEVEL_SPACE}rem`,\n  width: `${ICON_SIZE}rem`,\n  height: `${ICON_SIZE}rem`\n}));\n\nconst ListGroupItemWithPadding = styled(DefaultListGroupItem)(\n  ({ level = 0 }) => ({\n    paddingLeft: `${DEFAULT_PADDING + ICON_SIZE + level * LEVEL_SPACE}rem`,\n    cursor: 'pointer'\n  })\n);\n\nconst ListGroupItem = ({\n  hasSubItems = false,\n  isOpen = false,\n  level = 0,\n  children,\n  ...props\n}) => (\n  <ListGroupItemWithPadding level={level} {...props}>\n    {hasSubItems && <ToggleIcon level={level}>{isOpen ? '-' : '+'}</ToggleIcon>}\n    {children}\n  </ListGroupItemWithPadding>\n);\n\nexport default ListGroupItem;\n","const memoryStatus = {\n  isInitializing: true\n};\n\nconst status = {\n  get: key => memoryStatus[key],\n  set: (key, value) => {\n    memoryStatus[key] = value;\n  }\n};\n\nexport default status;\n","import React from 'react';\n\nimport ListGroupItem from './ListGroupItem';\n\nimport status from './status';\n\nconst walk = ({\n  data,\n  parent = '',\n  level = 0,\n  activeKey,\n  openNodes,\n  searchTerm,\n  getOnClickFunction\n}) =>\n  Object.entries(data)\n    .sort((a, b) => a[1].index - b[1].index)\n    .reduce((all, [nodeName, node]) => {\n      const { label, onClick, nodes, key } = node;\n      const hasSubItems = nodes !== undefined && nodes !== null;\n      if (!key) return all;\n      const isActive = activeKey === key;\n      const currentNode = [parent, nodeName].filter(x => x).join('/');\n      const isOpen = openNodes.includes(currentNode) || searchTerm;\n      const onClickFunction = getOnClickFunction({\n        onClick,\n        node: currentNode\n      });\n      const isInitializing = status.get('isInitializing');\n      const isMatching =\n        searchTerm &&\n        label.toLowerCase().includes(searchTerm.trim().toLowerCase());\n\n      const currentItem = (\n        <ListGroupItem\n          hasSubItems={hasSubItems}\n          isOpen={isOpen}\n          level={level}\n          onClick={onClickFunction}\n          active={isActive}\n          key={currentNode}\n        >\n          {label}\n        </ListGroupItem>\n      );\n      const nextLevelItems =\n        nodes &&\n        walk({\n          data: nodes,\n          parent: currentNode,\n          level: level + 1,\n          activeKey,\n          openNodes,\n          searchTerm,\n          getOnClickFunction\n        });\n\n      return [\n        ...all,\n        (!searchTerm || isMatching) && currentItem,\n        (isOpen || isInitializing) && nextLevelItems\n      ].filter(x => x);\n    }, []);\n\nexport default walk;\n","import React from 'react';\nimport { debounce } from 'lodash';\nimport { ListGroup, InputGroup, InputGroupAddon, Input } from 'reactstrap';\n\nimport walk from './walk';\nimport status from './status';\n\nconst defaultOnClick = () => console.warn('no behavior defined'); // eslint-disable-line no-console\n\nconst realtimeSearch = debounce(\n  (searchFunction, value) => searchFunction(value),\n  500\n);\n\nclass TreeViewMenu extends React.Component {\n  static defaultProps = {\n    data: null,\n    activeKey: '',\n    search: false\n  };\n\n  state = { openNodes: [], searchTerm: '' };\n\n  onChange = e => {\n    const { value } = e.target;\n    realtimeSearch(searchTerm => this.setState({ searchTerm }), value);\n  };\n\n  toggleNode = node => {\n    const { openNodes } = this.state;\n    if (openNodes.includes(node)) {\n      this.setState({\n        openNodes: openNodes.filter(openNode => openNode !== node)\n      });\n    } else {\n      this.setState({ openNodes: [...openNodes, node] });\n    }\n  };\n\n  getOnClickFunction = ({ onClick, node }) => () => {\n    const onClickFn = onClick || defaultOnClick;\n    onClickFn();\n    this.toggleNode(node);\n  };\n\n  preload = () => {\n    const { data, activeKey } = this.props;\n    const { openNodes, searchTerm } = this.state;\n    status.set('isInitializing', true);\n    // load the whole tree to memory to prevent first-time-loading freezzing\n    walk({\n      data,\n      activeKey,\n      openNodes,\n      searchTerm,\n      getOnClickFunction: this.getOnClickFunction\n    });\n    status.set('isInitializing', false);\n  };\n\n  getListItems = () => {\n    const { data, activeKey } = this.props;\n    const { openNodes, searchTerm } = this.state;\n    this.preload();\n    return walk({\n      data,\n      activeKey,\n      openNodes,\n      searchTerm,\n      getOnClickFunction: this.getOnClickFunction\n    });\n  };\n\n  render() {\n    const { data, search } = this.props;\n    return (\n      <>\n        {search && (\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\n            <Input onChange={this.onChange} />\n          </InputGroup>\n        )}\n        {data && <ListGroup>{this.getListItems()}</ListGroup>}\n      </>\n    );\n  }\n}\n\nexport default TreeViewMenu;\n","import { merge } from 'lodash';\n\nconst createObjFromKeys = ({ obj = {}, keys, value }) => {\n  if (keys.length === 1) {\n    obj[keys[0]] = value;\n  } else {\n    const key = keys.shift();\n    obj[key] = obj[key] || {};\n    obj[key].nodes = {\n      ...obj[key].nodes,\n      ...createObjFromKeys({\n        obj: typeof obj[key].nodes === 'undefined' ? {} : obj[key].nodes,\n        keys,\n        value\n      })\n    };\n  }\n\n  return obj;\n};\n\nconst cleanPath = path =>\n  path\n    .split('/')\n    .filter(x => x)\n    .join('/');\n\nconst transposeSpace = ({ space, navigate, spaceIndex }) => {\n  const { content } = space;\n  return content.pages.reduce((allPages, currentPage, pageIndex) => {\n    const {\n      t, // title\n      // c, // category\n      // i, // identifier\n      u, // url\n      // d, // directory\n      m, // is space\n      p // parent page\n    } = currentPage;\n    const path = u.split('/').filter(x => x);\n\n    // if it has a parent page, insert it to have complete nodes\n    if (p) path.splice(path.length - 1, 0, p);\n\n    const newObj = createObjFromKeys({\n      keys: path,\n      value: {\n        label: t,\n        onClick: () => navigate(u),\n        key: cleanPath(u),\n        index: m ? spaceIndex : pageIndex\n      }\n    });\n    return merge(newObj, allPages);\n  }, {});\n};\n\nconst transpose = ({ data, navigate, index }) => {\n  if (Array.isArray(data))\n    return data.reduce((allSpaces, currentSpace, spaceIndex) => {\n      const currentSpacePages = transposeSpace({\n        space: currentSpace,\n        spaceIndex,\n        navigate\n      });\n      return {\n        ...allSpaces,\n        ...currentSpacePages\n      };\n    }, {});\n  return transposeSpace({\n    space: data,\n    spaceIndex: index,\n    navigate\n  });\n};\n\nexport default transpose;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { get } from 'lodash';\n\nimport TreeViewMenu from '../components/TreeViewMenu';\nimport data from '../data/spaces.json';\nimport transpose from './transpose';\n\nconst cleanPath = path =>\n  path\n    .split('/')\n    .filter(x => x)\n    .join('/');\n\nclass DemoPage extends Component {\n  static getDerivedStateFromProps(props) {\n    const path = get(props, 'location.pathname');\n\n    return { path };\n  }\n\n  state = { path: '', treeData: null };\n\n  componentDidMount() {\n    this.processData();\n  }\n\n  processData = () => {\n    const treeData = transpose({ data, navigate: this.navigate });\n    this.setState({ treeData });\n  };\n\n  navigate = path => {\n    const { history } = this.props;\n    history.push(path);\n  };\n\n  render() {\n    const { path, treeData } = this.state;\n    const activeKey = cleanPath(path);\n    return (\n      <>\n        {treeData && (\n          <TreeViewMenu data={treeData} activeKey={activeKey} search />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(DemoPage);\n"],"sourceRoot":""}