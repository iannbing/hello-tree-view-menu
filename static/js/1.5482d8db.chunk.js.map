{"version":3,"sources":["components/TreeViewMenu/ListGroupItem.js","components/TreeViewMenu/index.js","DemoPage/transpose.js","DemoPage/index.js"],"names":["ToggleIcon","styled","_ref","_ref$level","level","position","left","concat","width","height","ListGroupItemWithPadding","ListGroupItem_default","a","_ref2","_ref2$level","paddingLeft","DEFAULT_PADDING","cursor","ListGroupItem","_ref3","_ref3$hasSubItems","hasSubItems","_ref3$isOpen","isOpen","_ref3$level","children","props","Object","objectWithoutProperties","react_default","createElement","Fragment","assign","defaultOnClick","console","warn","realtimeSearch","debounce_default","searchFunction","value","TreeViewMenu","state","openNodes","searchTerm","onChange","e","target","_this","setState","toggleNode","node","includes","filter","openNode","toConsumableArray","getOnClickFunction","onClick","walk","data","_ref2$parent","parent","activeKey","_this$state","entries","sort","b","index","reduce","all","_ref4","slicedToArray","nodeName","label","nodes","key","undefined","isActive","currentNode","x","join","onClickFunction","isMatching","toLowerCase","trim","currentItem","TreeViewMenu_ListGroupItem","active","nextLevelItems","_this$props","this","search","InputGroup_default","InputGroupAddon_default","addonType","Input_default","ListGroup_default","React","Component","defaultProps","transposeSpace","space","navigate","spaceIndex","content","pages","allPages","currentPage","pageIndex","t","u","m","p","path","split","splice","length","newObj","createObjFromKeys","_ref$obj","obj","keys","shift","objectSpread","cleanPath","merge_default","transpose","Array","isArray","allSpaces","currentSpace","currentSpacePages","DemoPage","treeData","processData","history","push","components_TreeViewMenu","get_default","withRouter"],"mappings":"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","file":"static/js/1.5482d8db.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'react-emotion';\nimport { ListGroupItem as DefaultListGroupItem } from 'reactstrap';\n\nconst DEFAULT_PADDING = 1.25;\nconst LEVEL_SPACE = 1.25;\nconst ICON_SIZE = 1;\n\nconst ToggleIcon = styled('div')(({ level = 0 }) => ({\n  position: 'absolute',\n  left: `${ICON_SIZE + level * LEVEL_SPACE}rem`,\n  width: `${ICON_SIZE}rem`,\n  height: `${ICON_SIZE}rem`\n}));\n\nconst ListGroupItemWithPadding = styled(DefaultListGroupItem)(\n  ({ level = 0 }) => ({\n    paddingLeft: `${DEFAULT_PADDING + ICON_SIZE + level * LEVEL_SPACE}rem`,\n    cursor: 'pointer'\n  })\n);\n\nconst ListGroupItem = ({\n  hasSubItems = false,\n  isOpen = false,\n  level = 0,\n  children,\n  ...props\n}) => (\n  <>\n    <ListGroupItemWithPadding level={level} {...props}>\n      {hasSubItems && (\n        <ToggleIcon level={level}>{isOpen ? '-' : '+'}</ToggleIcon>\n      )}\n      {children}\n    </ListGroupItemWithPadding>\n  </>\n);\n\nexport default ListGroupItem;\n","import React from 'react';\nimport { debounce } from 'lodash';\nimport { ListGroup, InputGroup, InputGroupAddon, Input } from 'reactstrap';\n\nimport ListGroupItem from './ListGroupItem';\n\nconst defaultOnClick = () => console.warn('no behavior defined'); // eslint-disable-line no-console\n\nconst realtimeSearch = debounce(\n  (searchFunction, value) => searchFunction(value),\n  500\n);\n\nclass TreeViewMenu extends React.Component {\n  static defaultProps = {\n    data: null,\n    activeKey: '',\n    search: false\n  };\n\n  state = { openNodes: [], searchTerm: '' };\n\n  onChange = e => {\n    const { value } = e.target;\n    realtimeSearch(searchTerm => this.setState({ searchTerm }), value);\n  };\n\n  toggleNode = node => {\n    const { openNodes } = this.state;\n    if (openNodes.includes(node)) {\n      this.setState({\n        openNodes: openNodes.filter(openNode => openNode !== node)\n      });\n    } else {\n      this.setState({ openNodes: [...openNodes, node] });\n    }\n  };\n\n  getOnClickFunction = ({ onClick, node }) => () => {\n    const onClickFn = onClick || defaultOnClick;\n    onClickFn();\n    this.toggleNode(node);\n  };\n\n  walk = ({ data, parent = '', level = 0 }) => {\n    const { activeKey } = this.props;\n    const { openNodes, searchTerm } = this.state;\n\n    return Object.entries(data)\n      .sort((a, b) => a[1].index - b[1].index)\n      .reduce((all, [nodeName, node]) => {\n        const { label, onClick, nodes, key } = node;\n        const hasSubItems = nodes !== undefined && nodes !== null;\n        if (!key) return all;\n        const isActive = activeKey === key;\n        const currentNode = [parent, nodeName].filter(x => x).join('/');\n        const isOpen = openNodes.includes(currentNode) || searchTerm;\n        const onClickFunction = this.getOnClickFunction({\n          onClick,\n          node: currentNode\n        });\n        const isMatching =\n          searchTerm &&\n          label.toLowerCase().includes(searchTerm.trim().toLowerCase());\n        const currentItem = (!searchTerm || isMatching) && (\n          <ListGroupItem\n            hasSubItems={hasSubItems}\n            isOpen={isOpen}\n            level={level}\n            onClick={onClickFunction}\n            active={isActive}\n            key={currentNode}\n          >\n            {label}\n          </ListGroupItem>\n        );\n        const nextLevelItems =\n          nodes &&\n          isOpen &&\n          this.walk({\n            data: nodes,\n            parent: currentNode,\n            level: level + 1\n          });\n        return [...all, currentItem, nextLevelItems].filter(x => x);\n      }, []);\n  };\n\n  render() {\n    const { data, activeKey, search } = this.props;\n    const { openNodes } = this.state;\n    return (\n      <>\n        {search && (\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\n            <Input onChange={this.onChange} />\n          </InputGroup>\n        )}\n        {data && (\n          <ListGroup>{this.walk({ data, activeKey, openNodes })}</ListGroup>\n        )}\n      </>\n    );\n  }\n}\n\nexport default TreeViewMenu;\n","import { merge } from 'lodash';\n\nconst createObjFromKeys = ({ obj = {}, keys, value }) => {\n  if (keys.length === 1) {\n    obj[keys[0]] = value;\n  } else {\n    const key = keys.shift();\n    obj[key] = obj[key] || {};\n    obj[key].nodes = {\n      ...obj[key].nodes,\n      ...createObjFromKeys({\n        obj: typeof obj[key].nodes === 'undefined' ? {} : obj[key].nodes,\n        keys,\n        value\n      })\n    };\n  }\n\n  return obj;\n};\n\nconst cleanPath = path =>\n  path\n    .split('/')\n    .filter(x => x)\n    .join('/');\n\nconst transposeSpace = ({ space, navigate, spaceIndex }) => {\n  const { content } = space;\n  return content.pages.reduce((allPages, currentPage, pageIndex) => {\n    const {\n      t, // title\n      // c, // category\n      // i, // identifier\n      u, // url\n      // d, // directory\n      m, // is space\n      p // parent page\n    } = currentPage;\n    const path = u.split('/').filter(x => x);\n\n    // if it has a parent page, insert it to have complete nodes\n    if (p) path.splice(path.length - 1, 0, p);\n\n    const newObj = createObjFromKeys({\n      keys: path,\n      value: {\n        label: t,\n        onClick: () => navigate(u),\n        key: cleanPath(u),\n        index: m ? spaceIndex : pageIndex\n      }\n    });\n    return merge(newObj, allPages);\n  }, {});\n};\n\nconst transpose = ({ data, navigate, index }) => {\n  if (Array.isArray(data))\n    return data.reduce((allSpaces, currentSpace, spaceIndex) => {\n      const currentSpacePages = transposeSpace({\n        space: currentSpace,\n        spaceIndex,\n        navigate\n      });\n      return {\n        ...allSpaces,\n        ...currentSpacePages\n      };\n    }, {});\n  return transposeSpace({\n    space: data,\n    spaceIndex: index,\n    navigate\n  });\n};\n\nexport default transpose;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { get } from 'lodash';\n\nimport TreeViewMenu from '../components/TreeViewMenu';\nimport data from '../data/spaces.json';\nimport transpose from './transpose';\n\nconst cleanPath = path =>\n  path\n    .split('/')\n    .filter(x => x)\n    .join('/');\n\nclass DemoPage extends Component {\n  static getDerivedStateFromProps(props) {\n    const path = get(props, 'location.pathname');\n\n    return { path };\n  }\n\n  state = { path: '', treeData: null };\n\n  componentDidMount() {\n    this.processData();\n  }\n\n  processData = () => {\n    const treeData = transpose({ data, navigate: this.navigate });\n    this.setState({ treeData });\n  };\n\n  navigate = path => {\n    const { history } = this.props;\n    history.push(path);\n  };\n\n  render() {\n    const { path, treeData } = this.state;\n    const activeKey = cleanPath(path);\n    return (\n      <>\n        {treeData && (\n          <TreeViewMenu data={treeData} activeKey={activeKey} search />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(DemoPage);\n"],"sourceRoot":""}