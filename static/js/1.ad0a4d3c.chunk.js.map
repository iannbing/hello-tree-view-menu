{"version":3,"sources":["components/TreeViewMenu/ListGroupItem.js","components/TreeViewMenu/walk.js","components/TreeViewMenu/index.js","DemoPage/transpose.js","DemoPage/index.js"],"names":["ToggleIcon","styled","_ref","_ref$level","level","position","left","concat","width","height","ListGroupItemWithPadding","ListGroupItem_default","a","_ref2","_ref2$level","paddingLeft","DEFAULT_PADDING","cursor","ListGroupItem","_ref3","_ref3$hasSubItems","hasSubItems","_ref3$isOpen","isOpen","_ref3$level","children","props","Object","objectWithoutProperties","react_default","createElement","assign","walk","data","_ref$parent","parent","activeKey","openNodes","searchTerm","getOnClickFunction","entries","sort","b","index","reduce","all","slicedToArray","nodeName","node","label","onClick","nodes","key","undefined","isActive","currentNode","filter","x","join","includes","onClickFunction","isMatching","toLowerCase","trim","currentItem","TreeViewMenu_ListGroupItem","active","nextLevelItems","toConsumableArray","defaultOnClick","console","warn","realtimeSearch","debounce_default","searchFunction","value","TreeViewMenu","state","onChange","e","target","_this","setState","toggleNode","openNode","_this$props","this","search","_this$state","Fragment","InputGroup_default","InputGroupAddon_default","addonType","Input_default","ListGroup_default","React","Component","defaultProps","transposeSpace","space","navigate","spaceIndex","content","pages","allPages","currentPage","pageIndex","t","u","m","p","path","split","splice","length","newObj","createObjFromKeys","_ref$obj","obj","keys","shift","objectSpread","cleanPath","merge_default","transpose","Array","isArray","allSpaces","currentSpace","currentSpacePages","DemoPage","treeData","processData","history","push","components_TreeViewMenu","get_default","withRouter"],"mappings":"gklVAQMA,EAAaC,YAAO,MAAPA,CAAc,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,MAAH,MAAoB,CACnDC,SAAU,WACVC,KAAI,GAAAC,OAJY,EADE,WAGa,IAAAJ,EAAW,EAAXA,GAE3B,OACJK,MAAK,GAAAD,OALW,EAKX,OACLE,OAAM,GAAAF,OANU,EAMV,UAGFG,EAA2BT,YAAOU,EAAAC,EAAPX,CAC/B,SAAAY,GAAA,IAAAC,EAAAD,EAAGT,MAAH,MAAoB,CAClBW,YAAW,GAAAR,OAAKS,KAZA,WAWlB,IAAAF,EAAW,EAAXA,GACa,OACXG,OAAQ,aAiBGC,EAbO,SAAAC,GAAA,IAAAC,EAAAD,EACpBE,mBADoB,IAAAD,KAAAE,EAAAH,EAEpBI,cAFoB,IAAAD,KAAAE,EAAAL,EAGpBf,aAHoB,IAAAoB,EAGZ,EAHYA,EAIpBC,EAJoBN,EAIpBM,SACGC,EALiBC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,oDAOpBU,EAAAjB,EAAAkB,cAACpB,EAADiB,OAAAI,OAAA,CAA0B3B,MAAOA,GAAWsB,GACzCL,GAAeQ,EAAAjB,EAAAkB,cAAC9B,EAAD,CAAYI,MAAOA,GAAQmB,EAAS,IAAM,KACzDE,IC6BUO,EAxDF,SAAPA,EAAO9B,GAAA,IACX+B,EADW/B,EACX+B,KADWC,EAAAhC,EAEXiC,cAFW,IAAAD,EAEF,GAFEA,EAAA/B,EAAAD,EAGXE,aAHW,IAAAD,EAGH,EAHGA,EAIXiC,EAJWlC,EAIXkC,UACAC,EALWnC,EAKXmC,UACAC,EANWpC,EAMXoC,WACAC,EAPWrC,EAOXqC,mBAPW,OASXZ,OAAOa,QAAQP,GACZQ,KAAK,SAAC7B,EAAG8B,GAAJ,OAAU9B,EAAE,GAAG+B,MAAQD,EAAE,GAAGC,QACjCC,OAAO,SAACC,EAADhC,GAA2B,IAAAM,EAAAQ,OAAAmB,EAAA,EAAAnB,CAAAd,EAAA,GAApBkC,EAAoB5B,EAAA,GAAV6B,EAAU7B,EAAA,GACzB8B,EAA+BD,EAA/BC,MAAOC,EAAwBF,EAAxBE,QAASC,EAAeH,EAAfG,MAAOC,EAAQJ,EAARI,IACzB/B,OAAwBgC,IAAVF,GAAiC,OAAVA,EAC3C,IAAKC,EAAK,OAAOP,EACjB,IAAMS,EAAWlB,IAAcgB,EACzBG,EAAc,CAACpB,EAAQY,GAAUS,OAAO,SAAAC,GAAC,OAAIA,IAAGC,KAAK,KACrDnC,EAASc,EAAUsB,SAASJ,IAAgBjB,EAC5CsB,EAAkBrB,EAAmB,CACzCW,UACAF,KAAMO,IAEFM,EACJvB,GACAW,EAAMa,cAAcH,SAASrB,EAAWyB,OAAOD,eAC3CE,EACJnC,EAAAjB,EAAAkB,cAACmC,EAAD,CACE5C,YAAaA,EACbE,OAAQA,EACRnB,MAAOA,EACP8C,QAASU,EACTM,OAAQZ,EACRF,IAAKG,GAEJN,GAGCkB,EACJhB,GACAnB,EAAK,CACHC,KAAMkB,EACNhB,OAAQoB,EACRnD,MAAOA,EAAQ,EACfgC,YACAC,YACAC,aACAC,uBAGJ,OAAOZ,OAAAyC,EAAA,EAAAzC,CACFkB,GADEtC,OAAA,GAEH+B,GAAcuB,IAAeG,EAC/BzC,GAAU4C,IACVX,OAAO,SAAAC,GAAC,OAAIA,KACb,KCpDDY,EAAiB,kBAAMC,QAAQC,KAAK,wBAEpCC,EAAiBC,IACrB,SAACC,EAAgBC,GAAjB,OAA2BD,EAAeC,IAC1C,KAGIC,6MAOJC,MAAQ,CAAExC,UAAW,GAAIC,WAAY,MAErCwC,SAAW,SAAAC,GAAK,IACNJ,EAAUI,EAAEC,OAAZL,MACRH,EAAe,SAAAlC,GAAU,OAAI2C,EAAKC,SAAS,CAAE5C,gBAAeqC,MAG9DQ,WAAa,SAAAnC,GAAQ,IACXX,EAAc4C,EAAKJ,MAAnBxC,UACJA,EAAUsB,SAASX,GACrBiC,EAAKC,SAAS,CACZ7C,UAAWA,EAAUmB,OAAO,SAAA4B,GAAQ,OAAIA,IAAapC,MAGvDiC,EAAKC,SAAS,CAAE7C,UAAUV,OAAAyC,EAAA,EAAAzC,CAAKU,GAAN9B,OAAA,CAAiByC,SAI9CT,mBAAqB,SAAArC,GAAA,IAAGgD,EAAHhD,EAAGgD,QAASF,EAAZ9C,EAAY8C,KAAZ,OAAuB,YACxBE,GAAWmB,KAE7BY,EAAKE,WAAWnC,6EAGT,IAAAqC,EAC6BC,KAAK5D,MAAjCO,EADDoD,EACCpD,KAAMG,EADPiD,EACOjD,UAAWmD,EADlBF,EACkBE,OADlBC,EAE2BF,KAAKT,MAA/BxC,EAFDmD,EAECnD,UAAWC,EAFZkD,EAEYlD,WACnB,OACET,EAAAjB,EAAAkB,cAAAD,EAAAjB,EAAA6E,SAAA,KACGF,GACC1D,EAAAjB,EAAAkB,cAAA4D,EAAA9E,EAAA,KACEiB,EAAAjB,EAAAkB,cAAA6D,EAAA/E,EAAA,CAAiBgF,UAAU,WAA3B,UACA/D,EAAAjB,EAAAkB,cAAA+D,EAAAjF,EAAA,CAAOkE,SAAUQ,KAAKR,YAGzB7C,GACCJ,EAAAjB,EAAAkB,cAAAgE,EAAAlF,EAAA,KACGoB,EAAK,CACJC,OACAG,YACAC,YACAC,aACAC,mBAAoB+C,KAAK/C,8BAjDZwD,IAAMC,WAA3BpB,EACGqB,aAAe,CACpBhE,KAAM,KACNG,UAAW,GACXmD,QAAQ,GAsDGX,4CC5CTsB,EAAiB,SAAArF,GAAqC,IAAlCsF,EAAkCtF,EAAlCsF,MAAOC,EAA2BvF,EAA3BuF,SAAUC,EAAiBxF,EAAjBwF,WAEzC,OADoBF,EAAZG,QACOC,MAAM3D,OAAO,SAAC4D,EAAUC,EAAaC,GAAc,IAE9DC,EAOEF,EAPFE,EAGAC,EAIEH,EAJFG,EAEAC,EAEEJ,EAFFI,EACAC,EACEL,EADFK,EAEIC,EAAOH,EAAEI,MAAM,KAAKxD,OAAO,SAAAC,GAAC,OAAIA,IAGlCqD,GAAGC,EAAKE,OAAOF,EAAKG,OAAS,EAAG,EAAGJ,GAEvC,IAAMK,EA1CgB,SAApBC,EAAoBlH,GAA+B,IAAAmH,EAAAnH,EAA5BoH,WAA4B,IAAAD,EAAtB,GAAsBA,EAAlBE,EAAkBrH,EAAlBqH,KAAM5C,EAAYzE,EAAZyE,MAC3C,GAAoB,IAAhB4C,EAAKL,OACPI,EAAIC,EAAK,IAAM5C,MACV,CACL,IAAMvB,EAAMmE,EAAKC,QACjBF,EAAIlE,GAAOkE,EAAIlE,IAAQ,GACvBkE,EAAIlE,GAAKD,MAATxB,OAAA8F,EAAA,EAAA9F,CAAA,GACK2F,EAAIlE,GAAKD,MACTiE,EAAkB,CACnBE,IAA+B,qBAAnBA,EAAIlE,GAAKD,MAAwB,GAAKmE,EAAIlE,GAAKD,MAC3DoE,OACA5C,WAKN,OAAO2C,EA0BUF,CAAkB,CAC/BG,KAAMR,EACNpC,MAAO,CACL1B,MAAO0D,EACPzD,QAAS,kBAAMkD,EAASQ,IACxBxD,IA5BU,SAAA2D,GAAI,OACpBA,EACGC,MAAM,KACNxD,OAAO,SAAAC,GAAC,OAAIA,IACZC,KAAK,KAwBGgE,CAAUd,GACfjE,MAAOkE,EAAIR,EAAaK,KAG5B,OAAOiB,IAAMR,EAAQX,IACpB,KAuBUoB,EApBG,SAAAzG,GAA+B,IAA5Bc,EAA4Bd,EAA5Bc,KAAMmE,EAAsBjF,EAAtBiF,SAAUzD,EAAYxB,EAAZwB,MACnC,OAAIkF,MAAMC,QAAQ7F,GACTA,EAAKW,OAAO,SAACmF,EAAWC,EAAc3B,GAC3C,IAAM4B,EAAoB/B,EAAe,CACvCC,MAAO6B,EACP3B,aACAD,aAEF,OAAOzE,OAAA8F,EAAA,EAAA9F,CAAA,GACFoG,EACAE,IAEJ,IACE/B,EAAe,CACpBC,MAAOlE,EACPoE,WAAY1D,EACZyD,cC3DE8B,6MAOJrD,MAAQ,CAAEkC,KAAM,GAAIoB,SAAU,QAM9BC,YAAc,WACZ,IAAMD,EAAWP,EAAU,CAAE3F,OAAMmE,SAAUnB,EAAKmB,WAClDnB,EAAKC,SAAS,CAAEiD,gBAGlB/B,SAAW,SAAAW,GACW9B,EAAKvD,MAAjB2G,QACAC,KAAKvB,uFAVbzB,KAAK8C,+CAaE,IAAA5C,EACoBF,KAAKT,MAAxBkC,EADDvB,EACCuB,KAAMoB,EADP3C,EACO2C,SACR/F,EA/BQ,SAAA2E,GAAI,OACpBA,EACGC,MAAM,KACNxD,OAAO,SAAAC,GAAC,OAAIA,IACZC,KAAK,KA2BYgE,CAAUX,GAC5B,OACElF,EAAAjB,EAAAkB,cAAAD,EAAAjB,EAAA6E,SAAA,KACG0C,GACCtG,EAAAjB,EAAAkB,cAACyG,EAAD,CAActG,KAAMkG,EAAU/F,UAAWA,EAAWmD,QAAM,wDA5BlC7D,GAG9B,MAAO,CAAEqF,KAFIyB,IAAI9G,EAAO,6BAFLsE,aAoCRyC,sBAAWP","file":"static/js/1.ad0a4d3c.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'react-emotion';\nimport { ListGroupItem as DefaultListGroupItem } from 'reactstrap';\n\nconst DEFAULT_PADDING = 1.25;\nconst LEVEL_SPACE = 1.25;\nconst ICON_SIZE = 1;\n\nconst ToggleIcon = styled('div')(({ level = 0 }) => ({\n  position: 'absolute',\n  left: `${ICON_SIZE + level * LEVEL_SPACE}rem`,\n  width: `${ICON_SIZE}rem`,\n  height: `${ICON_SIZE}rem`\n}));\n\nconst ListGroupItemWithPadding = styled(DefaultListGroupItem)(\n  ({ level = 0 }) => ({\n    paddingLeft: `${DEFAULT_PADDING + ICON_SIZE + level * LEVEL_SPACE}rem`,\n    cursor: 'pointer'\n  })\n);\n\nconst ListGroupItem = ({\n  hasSubItems = false,\n  isOpen = false,\n  level = 0,\n  children,\n  ...props\n}) => (\n  <ListGroupItemWithPadding level={level} {...props}>\n    {hasSubItems && <ToggleIcon level={level}>{isOpen ? '-' : '+'}</ToggleIcon>}\n    {children}\n  </ListGroupItemWithPadding>\n);\n\nexport default ListGroupItem;\n","import React from 'react';\n\nimport ListGroupItem from './ListGroupItem';\n\nconst walk = ({\n  data,\n  parent = '',\n  level = 0,\n  activeKey,\n  openNodes,\n  searchTerm,\n  getOnClickFunction\n}) =>\n  Object.entries(data)\n    .sort((a, b) => a[1].index - b[1].index)\n    .reduce((all, [nodeName, node]) => {\n      const { label, onClick, nodes, key } = node;\n      const hasSubItems = nodes !== undefined && nodes !== null;\n      if (!key) return all;\n      const isActive = activeKey === key;\n      const currentNode = [parent, nodeName].filter(x => x).join('/');\n      const isOpen = openNodes.includes(currentNode) || searchTerm;\n      const onClickFunction = getOnClickFunction({\n        onClick,\n        node: currentNode\n      });\n      const isMatching =\n        searchTerm &&\n        label.toLowerCase().includes(searchTerm.trim().toLowerCase());\n      const currentItem = (\n        <ListGroupItem\n          hasSubItems={hasSubItems}\n          isOpen={isOpen}\n          level={level}\n          onClick={onClickFunction}\n          active={isActive}\n          key={currentNode}\n        >\n          {label}\n        </ListGroupItem>\n      );\n      const nextLevelItems =\n        nodes &&\n        walk({\n          data: nodes,\n          parent: currentNode,\n          level: level + 1,\n          activeKey,\n          openNodes,\n          searchTerm,\n          getOnClickFunction\n        });\n\n      return [\n        ...all,\n        (!searchTerm || isMatching) && currentItem,\n        isOpen && nextLevelItems\n      ].filter(x => x);\n    }, []);\n\nexport default walk;\n","import React from 'react';\nimport { debounce } from 'lodash';\nimport { ListGroup, InputGroup, InputGroupAddon, Input } from 'reactstrap';\n\nimport walk from './walk';\n\nconst defaultOnClick = () => console.warn('no behavior defined'); // eslint-disable-line no-console\n\nconst realtimeSearch = debounce(\n  (searchFunction, value) => searchFunction(value),\n  500\n);\n\nclass TreeViewMenu extends React.Component {\n  static defaultProps = {\n    data: null,\n    activeKey: '',\n    search: false\n  };\n\n  state = { openNodes: [], searchTerm: '' };\n\n  onChange = e => {\n    const { value } = e.target;\n    realtimeSearch(searchTerm => this.setState({ searchTerm }), value);\n  };\n\n  toggleNode = node => {\n    const { openNodes } = this.state;\n    if (openNodes.includes(node)) {\n      this.setState({\n        openNodes: openNodes.filter(openNode => openNode !== node)\n      });\n    } else {\n      this.setState({ openNodes: [...openNodes, node] });\n    }\n  };\n\n  getOnClickFunction = ({ onClick, node }) => () => {\n    const onClickFn = onClick || defaultOnClick;\n    onClickFn();\n    this.toggleNode(node);\n  };\n\n  render() {\n    const { data, activeKey, search } = this.props;\n    const { openNodes, searchTerm } = this.state;\n    return (\n      <>\n        {search && (\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\n            <Input onChange={this.onChange} />\n          </InputGroup>\n        )}\n        {data && (\n          <ListGroup>\n            {walk({\n              data,\n              activeKey,\n              openNodes,\n              searchTerm,\n              getOnClickFunction: this.getOnClickFunction\n            })}\n          </ListGroup>\n        )}\n      </>\n    );\n  }\n}\n\nexport default TreeViewMenu;\n","import { merge } from 'lodash';\n\nconst createObjFromKeys = ({ obj = {}, keys, value }) => {\n  if (keys.length === 1) {\n    obj[keys[0]] = value;\n  } else {\n    const key = keys.shift();\n    obj[key] = obj[key] || {};\n    obj[key].nodes = {\n      ...obj[key].nodes,\n      ...createObjFromKeys({\n        obj: typeof obj[key].nodes === 'undefined' ? {} : obj[key].nodes,\n        keys,\n        value\n      })\n    };\n  }\n\n  return obj;\n};\n\nconst cleanPath = path =>\n  path\n    .split('/')\n    .filter(x => x)\n    .join('/');\n\nconst transposeSpace = ({ space, navigate, spaceIndex }) => {\n  const { content } = space;\n  return content.pages.reduce((allPages, currentPage, pageIndex) => {\n    const {\n      t, // title\n      // c, // category\n      // i, // identifier\n      u, // url\n      // d, // directory\n      m, // is space\n      p // parent page\n    } = currentPage;\n    const path = u.split('/').filter(x => x);\n\n    // if it has a parent page, insert it to have complete nodes\n    if (p) path.splice(path.length - 1, 0, p);\n\n    const newObj = createObjFromKeys({\n      keys: path,\n      value: {\n        label: t,\n        onClick: () => navigate(u),\n        key: cleanPath(u),\n        index: m ? spaceIndex : pageIndex\n      }\n    });\n    return merge(newObj, allPages);\n  }, {});\n};\n\nconst transpose = ({ data, navigate, index }) => {\n  if (Array.isArray(data))\n    return data.reduce((allSpaces, currentSpace, spaceIndex) => {\n      const currentSpacePages = transposeSpace({\n        space: currentSpace,\n        spaceIndex,\n        navigate\n      });\n      return {\n        ...allSpaces,\n        ...currentSpacePages\n      };\n    }, {});\n  return transposeSpace({\n    space: data,\n    spaceIndex: index,\n    navigate\n  });\n};\n\nexport default transpose;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { get } from 'lodash';\n\nimport TreeViewMenu from '../components/TreeViewMenu';\nimport data from '../data/spaces.json';\nimport transpose from './transpose';\n\nconst cleanPath = path =>\n  path\n    .split('/')\n    .filter(x => x)\n    .join('/');\n\nclass DemoPage extends Component {\n  static getDerivedStateFromProps(props) {\n    const path = get(props, 'location.pathname');\n\n    return { path };\n  }\n\n  state = { path: '', treeData: null };\n\n  componentDidMount() {\n    this.processData();\n  }\n\n  processData = () => {\n    const treeData = transpose({ data, navigate: this.navigate });\n    this.setState({ treeData });\n  };\n\n  navigate = path => {\n    const { history } = this.props;\n    history.push(path);\n  };\n\n  render() {\n    const { path, treeData } = this.state;\n    const activeKey = cleanPath(path);\n    return (\n      <>\n        {treeData && (\n          <TreeViewMenu data={treeData} activeKey={activeKey} search />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(DemoPage);\n"],"sourceRoot":""}