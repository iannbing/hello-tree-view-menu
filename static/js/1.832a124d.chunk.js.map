{"version":3,"sources":["components/TreeViewMenu/walk.js","components/TreeViewMenu/ListGroupItem.js","components/TreeViewMenu/index.js","DemoPage/transpose.js","DemoPage/index.js"],"names":["walk","data","props","Object","entries","sort","a","b","index","reduce","all","_ref","_ref2","slicedToArray","nodeName","node","toConsumableArray","concat","key","generateBranch","_props$parent","parent","_props$level","level","openNodes","searchTerm","nodes","label","nodePath","filter","x","join","isOpen","includes","currentItem","toLowerCase","trim","objectSpread","nextLevelItems","DefaultToggleIcon","on","react_default","createElement","ToggleIconContainer","styled","_ref2$level","position","left","width","height","ListGroupItemWithPadding","ListGroupItem_default","_ref3","_ref3$level","paddingLeft","DEFAULT_PADDING","cursor","ListGroupItem","_ref4","_ref4$hasSubItems","hasSubItems","_ref4$isOpen","_ref4$level","_ref4$toggleIcon","toggleIcon","children","objectWithoutProperties","ToggleIcon","assign","TreeViewMenu","state","onChange","e","value","target","_this","search","setState","toggleNode","openNode","getOnClickItem","onClickItem","loadListItems","_this$props","activeKey","_this$state","map","onClick","TreeViewMenu_ListGroupItem","active","timeout","debounceTime","this","debounce_default","searchFunction","_this$props2","Fragment","InputGroup_default","InputGroupAddon_default","addonType","Input_default","ListGroup_default","React","Component","defaultProps","console","warn","transposeSpace","space","spaceIndex","content","pages","allPages","currentPage","pageIndex","t","url","u","isSpace","m","parentPage","p","path","split","splice","length","newObj","createObjFromKeys","_ref$obj","obj","keys","shift","cleanPath","merge_default","transpose","Array","isArray","allSpaces","currentSpace","currentSpacePages","Icon","style","fontWeight","DemoPage","treeData","processData","navigate","history","push","_this2","components_TreeViewMenu","log","get_default","withRouter"],"mappings":"oilVAAMA,EAAO,SAACC,EAAMC,GAAP,OACXC,OAAOC,QAAQH,GACZI,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE,GAAGE,MAAQD,EAAE,GAAGC,QACjCC,OACC,SAACC,EAADC,GAAA,IAAAC,EAAAT,OAAAU,EAAA,EAAAV,CAAAQ,EAAA,GAAOG,EAAPF,EAAA,GAAiBG,EAAjBH,EAAA,UAAAT,OAAAa,EAAA,EAAAb,CACKO,GADLO,OAAAd,OAAAa,EAAA,EAAAb,CAEMY,EAAKG,IAAMC,EAAeJ,EAAMD,EAAUZ,GAAS,MAEzD,KAGAiB,EAAiB,SAACJ,EAAMD,EAAUZ,GAAU,IAAAkB,EACUlB,EAAlDmB,cADwC,IAAAD,EAC/B,GAD+BA,EAAAE,EACUpB,EAArCqB,aAD2B,IAAAD,EACnB,EADmBA,EAChBE,EAA0BtB,EAA1BsB,UAAWC,EAAevB,EAAfuB,WACnCC,EAAiBX,EAAjBW,MAAOC,EAAUZ,EAAVY,MACTC,EAAW,CAACP,EAAQP,GAAUe,OAAO,SAAAC,GAAC,OAAIA,IAAGC,KAAK,KAClDC,IAAWN,IAAUF,EAAUS,SAASL,MAAeH,GAKvDS,IAHHT,GACDE,EAAMQ,cAAcF,SAASR,EAAWW,OAAOD,iBAEpBhC,OAAAkC,EAAA,EAAAlC,CAAA,CAC3B6B,SACAJ,YACG1B,EACAa,GAECuB,EAAiBN,EACnBhC,EAAK0B,EAADvB,OAAAkC,EAAA,EAAAlC,CAAA,GAAaD,EAAb,CAAoBmB,OAAQO,EAAUL,MAAOA,EAAQ,KACzD,GAEJ,MAAO,CAACW,GAADjB,OAAAd,OAAAa,EAAA,EAAAb,CAAiBmC,IAAgBT,OAAO,SAAAC,GAAC,OAAIA,KAGvC9B,wCC1BTuC,EAAoB,SAAA5B,GAAA,IAAG6B,EAAH7B,EAAG6B,GAAH,OAAYC,EAAAnC,EAAAoC,cAAA,WAAMF,EAAK,IAAM,MAEjDG,EAAsBC,YAAO,MAAPA,CAAc,SAAAhC,GAAA,IAAAiC,EAAAjC,EAAGW,MAAH,MAAoB,CAC5DuB,SAAU,WACVC,KAAI,GAAA9B,OALY,EADE,WAIsB,IAAA4B,EAAW,EAAXA,GAEpC,OACJG,MAAK,GAAA/B,OANW,EAMX,OACLgC,OAAM,GAAAhC,OAPU,EAOV,UAGFiC,EAA2BN,YAAOO,EAAA7C,EAAPsC,CAC/B,SAAAQ,GAAA,IAAAC,EAAAD,EAAG7B,MAAH,MAAoB,CAClB+B,YAAW,GAAArC,OAAKsC,KAbA,WAYlB,IAAAF,EAAW,EAAXA,GACa,OACXG,OAAQ,aAyBGC,EArBO,SAAAC,GAOhB,IAAAC,EAAAD,EANJE,mBAMI,IAAAD,KAAAE,EAAAH,EALJ1B,cAKI,IAAA6B,KAAAC,EAAAJ,EAJJnC,aAII,IAAAuC,EAJI,EAIJA,EAAAC,EAAAL,EAHJM,kBAGI,IAAAD,EAHSxB,EAGTwB,EAFJE,EAEIP,EAFJO,SACG/D,EACCC,OAAA+D,EAAA,EAAA/D,CAAAuD,EAAA,0DACES,EAAaH,EACnB,OACEvB,EAAAnC,EAAAoC,cAACQ,EAAD/C,OAAAiE,OAAA,CAA0B7C,MAAOA,GAAWrB,GACzC0D,GACCnB,EAAAnC,EAAAoC,cAACC,EAAD,CAAqBpB,MAAOA,GAC1BkB,EAAAnC,EAAAoC,cAACyB,EAAD,CAAY3B,GAAIR,KAGnBiC,IC3BDI,6MASJC,MAAQ,CAAE9C,UAAW,GAAIC,WAAY,MAOrC8C,SAAW,SAAAC,GAAK,IACNC,EAAUD,EAAEE,OAAZD,MACRE,EAAKC,OAAO,SAAAnD,GAAU,OAAIkD,EAAKE,SAAS,CAAEpD,gBAAegD,MAG3DK,WAAa,SAAA/D,GAAQ,IACXS,EAAcmD,EAAKL,MAAnB9C,UACJA,EAAUS,SAASlB,GACrB4D,EAAKE,SAAS,CACZrD,UAAWA,EAAUK,OAAO,SAAAkD,GAAQ,OAAIA,IAAahE,MAGvD4D,EAAKE,SAAS,CAAErD,UAAUrB,OAAAa,EAAA,EAAAb,CAAKqB,GAANP,OAAA,CAAiBF,SAI9CiE,eAAiB,SAAA9E,GAAK,OAAI,YAExB+E,EADwBN,EAAKzE,MAArB+E,aACI/E,GACZyE,EAAKG,WAAW5E,EAAM0B,cAGxBsD,cAAgB,WAAM,IAAAC,EACoBR,EAAKzE,MAArCD,EADYkF,EACZlF,KAAMmF,EADMD,EACNC,UAAWpB,EADLmB,EACKnB,WADLqB,EAEcV,EAAKL,MAA/B9C,EAFY6D,EAEZ7D,UAAWC,EAFC4D,EAED5D,WAInB,OAFczB,EAAKC,EAAM,CAAEuB,YAAWC,eAEzB6D,IAAI,SAAA3E,GAAoD,IAAjDqB,EAAiDrB,EAAjDqB,OAAQN,EAAyCf,EAAzCe,MAAOR,EAAkCP,EAAlCO,IAAKK,EAA6BZ,EAA7BY,MAAOK,EAAsBjB,EAAtBiB,SAAUD,EAAYhB,EAAZgB,MACjD4D,EAAUZ,EAAKK,eAAe,CAAEpD,WAAUD,QAAOT,QACvD,OACEuB,EAAAnC,EAAAoC,cAAC8C,EAAD,CACE5B,cAAelC,EACfM,OAAQA,EACRT,MAAOA,EACPgE,QAASA,EACTE,OAAQvE,IAAQkE,EAChBlE,IAAKU,EACLoC,WAAYA,GAEXrC,yFA7CW,IAdK+D,EAefC,EAAiBC,KAAK1F,MAAtByF,aACRC,KAAKhB,QAhBkBc,EAgBUC,EAfnCE,IAAS,SAACC,EAAgBrB,GAAjB,OAA2BqB,EAAerB,IAAQiB,qCAgElD,IAAAK,EACkBH,KAAK1F,MAAtBD,EADD8F,EACC9F,KAAM2E,EADPmB,EACOnB,OAEd,OACEnC,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA0F,SAAA,KACGpB,GACCnC,EAAAnC,EAAAoC,cAAAuD,EAAA3F,EAAA,KACEmC,EAAAnC,EAAAoC,cAAAwD,EAAA5F,EAAA,CAAiB6F,UAAU,WAA3B,UACA1D,EAAAnC,EAAAoC,cAAA0D,EAAA9F,EAAA,CAAOiE,SAAUqB,KAAKrB,YAGzBtE,GAAQwC,EAAAnC,EAAAoC,cAAA2D,EAAA/F,EAAA,KAAYsF,KAAKV,yBAzEPoB,IAAMC,WAA3BlC,EACGmC,aAAe,CACpBvG,KAAM,KACNmF,UAAW,GACXR,QAAQ,EACRK,YAVmB,kBAAMwB,QAAQC,KAAK,wBAWtCf,aAAc,KAyEHtB,mCChETsC,EAAiB,SAAA/F,GAA2B,IAAxBgG,EAAwBhG,EAAxBgG,MAAOC,EAAiBjG,EAAjBiG,WAE/B,OADoBD,EAAZE,QACOC,MAAMtG,OAAO,SAACuG,EAAUC,EAAaC,GAClD,IAAMvF,EAAQsF,EAAYE,EACpBC,EAAMH,EAAYI,EAClBC,IAAYL,EAAYM,EACxBC,EAAaP,EAAYQ,EACzBC,EAAON,EAAIO,MAAM,KAAK9F,OAAO,SAAAC,GAAC,OAAIA,IAGpC0F,GAAYE,EAAKE,OAAOF,EAAKG,OAAS,EAAG,EAAGL,GAEhD,IAAMM,EArCgB,SAApBC,EAAoBpH,GAA+B,IAAAqH,EAAArH,EAA5BsH,WAA4B,IAAAD,EAAtB,GAAsBA,EAAlBE,EAAkBvH,EAAlBuH,KAAMzD,EAAY9D,EAAZ8D,MAC3C,GAAoB,IAAhByD,EAAKL,OACPI,EAAIC,EAAK,IAAMzD,MACV,CACL,IAAMvD,EAAMgH,EAAKC,QACjBF,EAAI/G,GAAO+G,EAAI/G,IAAQ,GACvB+G,EAAI/G,GAAKQ,MAATvB,OAAAkC,EAAA,EAAAlC,CAAA,GACK8H,EAAI/G,GAAKQ,MACTqG,EAAkB,CACnBE,IAA+B,qBAAnBA,EAAI/G,GAAKQ,MAAwB,GAAKuG,EAAI/G,GAAKQ,MAC3DwG,OACAzD,WAKN,OAAOwD,EAqBUF,CAAkB,CAC/BG,KAAMR,EACNjD,MAAO,CACL9C,QACAT,IAtBU,SAAAwG,GAAI,OACpBA,EACGC,MAAM,KACN9F,OAAO,SAAAC,GAAC,OAAIA,IACZC,KAAK,KAkBGqG,CAAUhB,GACf5G,MAAO8G,EAAUT,EAAaK,KAGlC,OAAOmB,IAAMP,EAAQd,IACpB,KAqBUsB,EAlBG,SAAAlF,GAAqB,IAAlBnD,EAAkBmD,EAAlBnD,KAAMO,EAAY4C,EAAZ5C,MACzB,OAAI+H,MAAMC,QAAQvI,GACTA,EAAKQ,OAAO,SAACgI,EAAWC,EAAc7B,GAC3C,IAAM8B,EAAoBhC,EAAe,CACvCC,MAAO8B,EACP7B,eAEF,OAAO1G,OAAAkC,EAAA,EAAAlC,CAAA,GACFsI,EACAE,IAEJ,IACEhC,EAAe,CACpBC,MAAO3G,EACP4G,WAAYrG,KCnDVoI,EAAO,SAAAjI,GAAA,IAAG6B,EAAH7B,EAAG6B,GAAH,OACXC,EAAAnC,EAAAoC,cAAA,OAAKmG,MAAO,CAAEC,WAAY,OAAQhG,SAAU,WAAYC,MAAO,IAC5DP,EAAK,MAAQ,QAIZuG,6MAOJzE,MAAQ,CAAEoD,KAAM,GAAIsB,SAAU,QAM9BC,YAAc,WACZ,IAAMD,EAAWV,EAAU,CAAErI,SAC7B0E,EAAKE,SAAS,CAAEmE,gBAGlBE,SAAW,SAAAhI,GACWyD,EAAKzE,MAAjBiJ,QACAC,KAAR,IAAAnI,OAAiBC,wFAVjB0E,KAAKqD,+CAaE,IAAAI,EAAAzD,KAAAP,EACoBO,KAAKtB,MAAxBoD,EADDrC,EACCqC,KAAMsB,EADP3D,EACO2D,SACR5D,EArCQ,SAAAsC,GAAI,OACpBA,EACGC,MAAM,KACN9F,OAAO,SAAAC,GAAC,OAAIA,IACZC,KAAK,KAiCYqG,CAAUV,GAC5B,OACEjF,EAAAnC,EAAAoC,cAAAD,EAAAnC,EAAA0F,SAAA,KACGgD,GACCvG,EAAAnC,EAAAoC,cAAC4G,EAAD,CACErJ,KAAM+I,EACN5D,UAAWA,EACXR,QAAM,EACNZ,WAAY4E,EACZ3D,YAAa,SAAArE,GAA0B,IAAvBG,EAAuBH,EAAvBG,KAAMY,EAAiBf,EAAjBe,MAAOT,EAAUN,EAAVM,IAC3BmI,EAAKH,SAAShI,GACduF,QAAQ8C,IAAI,CAAExI,OAAMY,QAAOT,SAE7ByE,aAAc,0DArCQzF,GAG9B,MAAO,CAAEwH,KAFI8B,IAAItJ,EAAO,6BAFLqG,aA8CRkD,sBAAWV","file":"static/js/1.832a124d.chunk.js","sourcesContent":["const walk = (data, props) =>\n  Object.entries(data)\n    .sort((a, b) => a[1].index - b[1].index)\n    .reduce(\n      (all, [nodeName, node]) => [\n        ...all,\n        ...(node.key ? generateBranch(node, nodeName, props) : [])\n      ],\n      []\n    );\n\nconst generateBranch = (node, nodeName, props) => {\n  const { parent = '', level = 0, openNodes, searchTerm } = props;\n  const { nodes, label } = node;\n  const nodePath = [parent, nodeName].filter(x => x).join('/');\n  const isOpen = !!nodes && (openNodes.includes(nodePath) || !!searchTerm);\n  const isVisible =\n    !searchTerm ||\n    label.toLowerCase().includes(searchTerm.trim().toLowerCase());\n\n  const currentItem = isVisible && {\n    isOpen,\n    nodePath,\n    ...props,\n    ...node\n  };\n  const nextLevelItems = isOpen\n    ? walk(nodes, { ...props, parent: nodePath, level: level + 1 })\n    : [];\n\n  return [currentItem, ...nextLevelItems].filter(x => x);\n};\n\nexport default walk;\n","import React from 'react';\nimport styled from 'react-emotion';\nimport { ListGroupItem as DefaultListGroupItem } from 'reactstrap';\n\nconst DEFAULT_PADDING = 1.25;\nconst LEVEL_SPACE = 1.25;\nconst ICON_SIZE = 1;\nconst DefaultToggleIcon = ({ on }) => <div>{on ? '-' : '+'}</div>;\n\nconst ToggleIconContainer = styled('div')(({ level = 0 }) => ({\n  position: 'absolute',\n  left: `${ICON_SIZE + level * LEVEL_SPACE}rem`,\n  width: `${ICON_SIZE}rem`,\n  height: `${ICON_SIZE}rem`\n}));\n\nconst ListGroupItemWithPadding = styled(DefaultListGroupItem)(\n  ({ level = 0 }) => ({\n    paddingLeft: `${DEFAULT_PADDING + ICON_SIZE + level * LEVEL_SPACE}rem`,\n    cursor: 'pointer'\n  })\n);\n\nconst ListGroupItem = ({\n  hasSubItems = false,\n  isOpen = false,\n  level = 0,\n  toggleIcon = DefaultToggleIcon,\n  children,\n  ...props\n}) => {\n  const ToggleIcon = toggleIcon;\n  return (\n    <ListGroupItemWithPadding level={level} {...props}>\n      {hasSubItems && (\n        <ToggleIconContainer level={level}>\n          <ToggleIcon on={isOpen} />\n        </ToggleIconContainer>\n      )}\n      {children}\n    </ListGroupItemWithPadding>\n  );\n};\n\nexport default ListGroupItem;\n","import React from 'react';\nimport { debounce } from 'lodash';\nimport { ListGroup, InputGroup, InputGroupAddon, Input } from 'reactstrap';\n\nimport walk from './walk';\nimport ListGroupItem from './ListGroupItem';\n\nconst defaultOnClick = () => console.warn('no behavior defined'); // eslint-disable-line no-console\n\nconst getDebouncedSearch = timeout =>\n  debounce((searchFunction, value) => searchFunction(value), timeout);\n\nclass TreeViewMenu extends React.Component {\n  static defaultProps = {\n    data: null,\n    activeKey: '',\n    search: false,\n    onClickItem: defaultOnClick,\n    debounceTime: 125\n  };\n\n  state = { openNodes: [], searchTerm: '' };\n\n  componentDidMount() {\n    const { debounceTime } = this.props;\n    this.search = getDebouncedSearch(debounceTime);\n  }\n\n  onChange = e => {\n    const { value } = e.target;\n    this.search(searchTerm => this.setState({ searchTerm }), value);\n  };\n\n  toggleNode = node => {\n    const { openNodes } = this.state;\n    if (openNodes.includes(node)) {\n      this.setState({\n        openNodes: openNodes.filter(openNode => openNode !== node)\n      });\n    } else {\n      this.setState({ openNodes: [...openNodes, node] });\n    }\n  };\n\n  getOnClickItem = props => () => {\n    const { onClickItem } = this.props;\n    onClickItem(props);\n    this.toggleNode(props.nodePath);\n  };\n\n  loadListItems = () => {\n    const { data, activeKey, toggleIcon } = this.props;\n    const { openNodes, searchTerm } = this.state;\n\n    const items = walk(data, { openNodes, searchTerm });\n\n    return items.map(({ isOpen, nodes, key, level, nodePath, label }) => {\n      const onClick = this.getOnClickItem({ nodePath, label, key });\n      return (\n        <ListGroupItem\n          hasSubItems={!!nodes}\n          isOpen={isOpen}\n          level={level}\n          onClick={onClick}\n          active={key === activeKey}\n          key={nodePath}\n          toggleIcon={toggleIcon}\n        >\n          {label}\n        </ListGroupItem>\n      );\n    });\n  };\n\n  render() {\n    const { data, search } = this.props;\n\n    return (\n      <>\n        {search && (\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\n            <Input onChange={this.onChange} />\n          </InputGroup>\n        )}\n        {data && <ListGroup>{this.loadListItems()}</ListGroup>}\n      </>\n    );\n  }\n}\n\nexport default TreeViewMenu;\n","import { merge } from 'lodash';\n\nconst createObjFromKeys = ({ obj = {}, keys, value }) => {\n  if (keys.length === 1) {\n    obj[keys[0]] = value;\n  } else {\n    const key = keys.shift();\n    obj[key] = obj[key] || {};\n    obj[key].nodes = {\n      ...obj[key].nodes,\n      ...createObjFromKeys({\n        obj: typeof obj[key].nodes === 'undefined' ? {} : obj[key].nodes,\n        keys,\n        value\n      })\n    };\n  }\n\n  return obj;\n};\n\nconst cleanPath = path =>\n  path\n    .split('/')\n    .filter(x => x)\n    .join('/');\n\nconst transposeSpace = ({ space, spaceIndex }) => {\n  const { content } = space;\n  return content.pages.reduce((allPages, currentPage, pageIndex) => {\n    const label = currentPage.t;\n    const url = currentPage.u;\n    const isSpace = !!currentPage.m;\n    const parentPage = currentPage.p;\n    const path = url.split('/').filter(x => x);\n\n    // if it has a parent page, insert it to have complete nodes\n    if (parentPage) path.splice(path.length - 1, 0, parentPage);\n\n    const newObj = createObjFromKeys({\n      keys: path,\n      value: {\n        label,\n        key: cleanPath(url),\n        index: isSpace ? spaceIndex : pageIndex\n      }\n    });\n    return merge(newObj, allPages);\n  }, {});\n};\n\nconst transpose = ({ data, index }) => {\n  if (Array.isArray(data))\n    return data.reduce((allSpaces, currentSpace, spaceIndex) => {\n      const currentSpacePages = transposeSpace({\n        space: currentSpace,\n        spaceIndex\n      });\n      return {\n        ...allSpaces,\n        ...currentSpacePages\n      };\n    }, {});\n  return transposeSpace({\n    space: data,\n    spaceIndex: index\n  });\n};\n\nexport default transpose;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { get } from 'lodash';\n\nimport TreeViewMenu from '../components/TreeViewMenu';\nimport data from '../data/spaces.json';\nimport transpose from './transpose';\n\nconst cleanPath = path =>\n  path\n    .split('/')\n    .filter(x => x)\n    .join('/');\n\nconst Icon = ({ on }) => (\n  <div style={{ fontWeight: 'bold', position: 'absolute', left: -8 }}>\n    {on ? '[-]' : '[+]'}\n  </div>\n);\n\nclass DemoPage extends Component {\n  static getDerivedStateFromProps(props) {\n    const path = get(props, 'location.pathname');\n\n    return { path };\n  }\n\n  state = { path: '', treeData: null };\n\n  componentDidMount() {\n    this.processData();\n  }\n\n  processData = () => {\n    const treeData = transpose({ data });\n    this.setState({ treeData });\n  };\n\n  navigate = key => {\n    const { history } = this.props;\n    history.push(`/${key}`);\n  };\n\n  render() {\n    const { path, treeData } = this.state;\n    const activeKey = cleanPath(path);\n    return (\n      <>\n        {treeData && (\n          <TreeViewMenu\n            data={treeData}\n            activeKey={activeKey}\n            search\n            toggleIcon={Icon} // remove this prop to see the default icon\n            onClickItem={({ node, label, key }) => {\n              this.navigate(key);\n              console.log({ node, label, key }); // eslint-disable-line no-console\n            }}\n            debounceTime={125}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(DemoPage);\n"],"sourceRoot":""}