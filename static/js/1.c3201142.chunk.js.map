{"version":3,"sources":["components/TreeViewMenu/ListGroupItem.js","components/TreeViewMenu/index.js","DemoPage/transpose.js","DemoPage/index.js"],"names":["ToggleIcon","styled","_ref","_ref$level","level","position","left","concat","width","height","ListGroupItemWithPadding","ListGroupItem_default","a","_ref2","_ref2$level","paddingLeft","DEFAULT_PADDING","cursor","ListGroupItem","_ref3","_ref3$hasSubItems","hasSubItems","_ref3$isOpen","isOpen","_ref3$level","children","props","Object","objectWithoutProperties","react_default","createElement","Fragment","assign","defaultOnClick","console","warn","TreeViewMenu","state","openNodes","toggleNode","node","_this","includes","setState","filter","openNode","toConsumableArray","getOnClickFunction","onClick","walk","data","_ref2$parent","parent","_this$props","activeKey","searchTerm","entries","sort","b","index","reduce","all","_ref4","slicedToArray","nodeName","label","nodes","key","undefined","isActive","currentNode","x","join","onClickFunction","isMatching","toLowerCase","trim","currentItem","TreeViewMenu_ListGroupItem","active","nextLevelItems","_this$props2","this","ListGroup_default","React","Component","defaultProps","transposeSpace","space","navigate","spaceIndex","content","pages","allPages","currentPage","pageIndex","t","u","m","p","path","split","splice","length","newObj","createObjFromKeys","_ref$obj","obj","keys","value","shift","objectSpread","cleanPath","merge_default","transpose","Array","isArray","allSpaces","currentSpace","currentSpacePages","DemoPage","treeData","processData","history","push","onChange","e","target","_this$state","InputGroup_default","InputGroupAddon_default","addonType","Input_default","components_TreeViewMenu","get_default","withRouter"],"mappings":"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","file":"static/js/1.c3201142.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'react-emotion';\nimport { ListGroupItem as DefaultListGroupItem } from 'reactstrap';\n\nconst DEFAULT_PADDING = 1.25;\nconst LEVEL_SPACE = 1.25;\nconst ICON_SIZE = 1;\n\nconst ToggleIcon = styled('div')(({ level = 0 }) => ({\n  position: 'absolute',\n  left: `${ICON_SIZE + level * LEVEL_SPACE}rem`,\n  width: `${ICON_SIZE}rem`,\n  height: `${ICON_SIZE}rem`\n}));\n\nconst ListGroupItemWithPadding = styled(DefaultListGroupItem)(\n  ({ level = 0 }) => ({\n    paddingLeft: `${DEFAULT_PADDING + ICON_SIZE + level * LEVEL_SPACE}rem`,\n    cursor: 'pointer'\n  })\n);\n\nconst ListGroupItem = ({\n  hasSubItems = false,\n  isOpen = false,\n  level = 0,\n  children,\n  ...props\n}) => (\n  <>\n    <ListGroupItemWithPadding level={level} {...props}>\n      {hasSubItems && (\n        <ToggleIcon level={level}>{isOpen ? '-' : '+'}</ToggleIcon>\n      )}\n      {children}\n    </ListGroupItemWithPadding>\n  </>\n);\n\nexport default ListGroupItem;\n","import React from 'react';\nimport { ListGroup } from 'reactstrap';\n\nimport ListGroupItem from './ListGroupItem';\n\nconst defaultOnClick = () => console.warn('no behavior defined'); // eslint-disable-line no-console\n\nclass TreeViewMenu extends React.Component {\n  static defaultProps = {\n    data: null,\n    activeKey: '',\n    searchTerm: ''\n  };\n\n  state = { openNodes: [] };\n\n  toggleNode = node => {\n    const { openNodes } = this.state;\n    if (openNodes.includes(node)) {\n      this.setState({\n        openNodes: openNodes.filter(openNode => openNode !== node)\n      });\n    } else {\n      this.setState({ openNodes: [...openNodes, node] });\n    }\n  };\n\n  getOnClickFunction = ({ onClick, node }) => () => {\n    const onClickFn = onClick || defaultOnClick;\n    onClickFn();\n    this.toggleNode(node);\n  };\n\n  walk = ({ data, parent = '', level = 0 }) => {\n    const { activeKey, searchTerm } = this.props;\n    const { openNodes } = this.state;\n\n    return Object.entries(data)\n      .sort((a, b) => a[1].index - b[1].index)\n      .reduce((all, [nodeName, node]) => {\n        const { label, onClick, nodes, key } = node;\n        const hasSubItems = nodes !== undefined && nodes !== null;\n        if (!key) return all;\n        const isActive = activeKey === key;\n        const currentNode = [parent, nodeName].filter(x => x).join('/');\n        const isOpen = openNodes.includes(currentNode) || searchTerm;\n        const onClickFunction = this.getOnClickFunction({\n          onClick,\n          node: currentNode\n        });\n        const isMatching =\n          searchTerm &&\n          label.toLowerCase().includes(searchTerm.trim().toLowerCase());\n        const currentItem = (!searchTerm || isMatching) && (\n          <ListGroupItem\n            hasSubItems={hasSubItems}\n            isOpen={isOpen}\n            level={level}\n            onClick={onClickFunction}\n            active={isActive}\n            key={currentNode}\n          >\n            {label}\n          </ListGroupItem>\n        );\n        const nextLevelItems =\n          nodes &&\n          isOpen &&\n          this.walk({\n            data: nodes,\n            parent: currentNode,\n            level: level + 1\n          });\n        return [...all, currentItem, nextLevelItems].filter(x => x);\n      }, []);\n  };\n\n  render() {\n    const { data, activeKey } = this.props;\n    const { openNodes } = this.state;\n    return (\n      data && <ListGroup>{this.walk({ data, activeKey, openNodes })}</ListGroup>\n    );\n  }\n}\n\nexport default TreeViewMenu;\n","import { merge } from 'lodash';\n\nconst createObjFromKeys = ({ obj = {}, keys, value }) => {\n  if (keys.length === 1) {\n    obj[keys[0]] = value;\n  } else {\n    const key = keys.shift();\n    obj[key] = obj[key] || {};\n    obj[key].nodes = {\n      ...obj[key].nodes,\n      ...createObjFromKeys({\n        obj: typeof obj[key].nodes === 'undefined' ? {} : obj[key].nodes,\n        keys,\n        value\n      })\n    };\n  }\n\n  return obj;\n};\n\nconst cleanPath = path =>\n  path\n    .split('/')\n    .filter(x => x)\n    .join('/');\n\nconst transposeSpace = ({ space, navigate, spaceIndex }) => {\n  const { content } = space;\n  return content.pages.reduce((allPages, currentPage, pageIndex) => {\n    const {\n      t, // title\n      // c, // category\n      // i, // identifier\n      u, // url\n      // d, // directory\n      m, // is space\n      p // parent page\n    } = currentPage;\n    const path = u.split('/').filter(x => x);\n\n    // if it has a parent page, insert it to have complete nodes\n    if (p) path.splice(path.length - 1, 0, p);\n\n    const newObj = createObjFromKeys({\n      keys: path,\n      value: {\n        label: t,\n        onClick: () => navigate(u),\n        key: cleanPath(u),\n        index: m ? spaceIndex : pageIndex\n      }\n    });\n    return merge(newObj, allPages);\n  }, {});\n};\n\nconst transpose = ({ data, navigate, index }) => {\n  if (Array.isArray(data))\n    return data.reduce((allSpaces, currentSpace, spaceIndex) => {\n      const currentSpacePages = transposeSpace({\n        space: currentSpace,\n        spaceIndex,\n        navigate\n      });\n      return {\n        ...allSpaces,\n        ...currentSpacePages\n      };\n    }, {});\n  return transposeSpace({\n    space: data,\n    spaceIndex: index,\n    navigate\n  });\n};\n\nexport default transpose;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap';\nimport { get } from 'lodash';\n\nimport TreeViewMenu from '../components/TreeViewMenu';\nimport data from '../data/spaces.json';\nimport transpose from './transpose';\n\nconst cleanPath = path =>\n  path\n    .split('/')\n    .filter(x => x)\n    .join('/');\n\nclass DemoPage extends Component {\n  static getDerivedStateFromProps(props) {\n    const path = get(props, 'location.pathname');\n\n    return { path };\n  }\n\n  state = { path: '', treeData: null, searchTerm: '' };\n\n  componentDidMount() {\n    this.processData();\n  }\n\n  processData = () => {\n    const treeData = transpose({ data, navigate: this.navigate });\n    this.setState({ treeData });\n  };\n\n  navigate = path => {\n    const { history } = this.props;\n    history.push(path);\n  };\n\n  onChange = e => {\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  render() {\n    const { path, treeData, searchTerm } = this.state;\n    const activeKey = cleanPath(path);\n    return (\n      <>\n        <InputGroup>\n          <InputGroupAddon addonType=\"prepend\">Search</InputGroupAddon>\n          <Input value={searchTerm} onChange={this.onChange} />\n        </InputGroup>\n        {treeData && (\n          <TreeViewMenu\n            data={treeData}\n            activeKey={activeKey}\n            searchTerm={searchTerm}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(DemoPage);\n"],"sourceRoot":""}